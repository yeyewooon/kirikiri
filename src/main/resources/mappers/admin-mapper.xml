<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="adminMapper">
 	<select id="selectAllMember" parameterType="map" resultType="com.kiri.dto.MemberDTO">
 		select * from (select member.*, row_number() over(order by 1 desc) as num from member where user_email != 'admin')
				where num between #{start} and #{end}
 	</select>
 	<select id="getPageNavi" resultType="int">
 		select count(*) as totalCnt from member where user_email != 'admin'
 	</select>
 	<select id="selectReport" resultType="com.kiri.dto.ReportDTO">
 		select * from report
 	</select>
 	<select id="selectReportBySeq" resultType="com.kiri.dto.ReportDTO" parameterType="int">
 		select * from report where seq_report = #{seq_report}
 	</select>
 	<insert id="insertBl" parameterType="com.kiri.dto.BlackListDTO">
 		insert into blacklist values(seq_bl.nextval, #{user_email}, sysdate, #{bl_reason})
 	</insert>
 	<delete id="deleteReport" parameterType="int">
 		delete from report where seq_report=#{seq_report}
 	</delete>
 	<update id="updateBl" parameterType="String">
 		update member set user_blacklist='Y' where user_email=#{user_email}
 	</update>
 	<select id="searchMember" parameterType="map" resultType="com.kiri.dto.MemberDTO">
 		select * from member where
			<if test="searchType == 'all'">(user_email like '%${searchKeyword}%' or user_nickname like '%${searchKeyword}%'or user_phone like '%${searchKeyword}%') and user_email != 'admin' </if>
			<if test="searchType != 'all'">${searchType} like '%' || #{searchKeyword} || '%' and user_email != 'admin' </if>
			order by 1
 	</select>
 	<select id="selectDetailMem" resultType="com.kiri.dto.MemberDTO" parameterType="String">
 		select * from member where user_email = #{user_email}
 	</select>
 	<update id="updateMem" parameterType="map">
 		update member set user_blacklist=#{user_blacklist} where user_email=#{user_email}
 	</update>
 	
 	<!-- //////////////////////////////////////////////////////// -->
 	<!-- 형석 -->
 	<!-- 모임 전체 조회 -->
 	<select id = "selectAllGroup" parameterType = "map" resultType = "com.kiri.dto.Tbl_GroupDTO">
 		 		select * from (select tbl_group.*, row_number() over(order by 1 desc) as num from tbl_group)
				where num between #{start} and #{end}
 	</select>
 
 	<!-- 모임 총 개수, 페이지네이션 -->
 	<select id="getPageNaviGroup" resultType="int">
 		select count(*) as totalCnt from tbl_group
 	</select>
 	
 	<!-- 모임 검색 -->
 	<select id="searchGroup" parameterType="map" resultType="com.kiri.dto.Tbl_GroupDTO">
 		select * from tbl_group where
			<if test="searchType == 'all'">group_title like '%${searchKeyword}%' or group_category like '%${searchKeyword}%' or group_people like '%${searchKeyword}%' or user_email like '%${searchKeyword}%' or group_site like '%${searchKeyword}%' </if>
			<if test="searchType != 'all'">${searchType} like '%' || #{searchKeyword} || '%'</if>
			order by 1
 	</select>
 	
 	<!-- 모임 삭제 -->
 	<delete id = "deleteGroup" parameterType = "int">
 		delete from tbl_group where seq_group = #{seq_group}
 	</delete>
 	
 	<!-- 게시물 관리 -->

 	<!-- 게시물 list 잘라서 가져오기 -->
	<select id="selectBoard" parameterType="map" resultType="com.kiri.dto.BoardDTO">
		select *
            from (select board.*, row_number() over(order by board_date desc) as num from board where board_category not like '%공지%')
            where num between #{start} and #{end}
 	</select>

	<!-- 내가 쓴 일반게시판 글 갯수 가져오기 -->
	<select id="selectBoardCount" resultType="int">
		select count(*) from board where board_category not like '%공지%'
	</select>

	<!-- 내가 쓴 모임게시판 글 갯수 가져오기 -->
	<select id="selectGroupBoardCount" resultType="int">
		select count(*) from group_board
	</select>

	<!-- ajax 일반 조회 -->
 	<select id="selectAllBoard" resultType="com.kiri.dto.BoardDTO">
		select * from board where board_category not like '%공지%' order by board_date desc
 	</select>
 	
 	<!-- ajax 일반 게시글의 공지 조회 -->
	<select id="selectNoticeBoardList" resultType="com.kiri.dto.BoardDTO">
		select * from board where board_category like '%공지%' order by board_date desc
 	</select>

	<!-- ajax 모임 게시글 -->
	<select id="selectAllGroupBoard" resultType="com.kiri.dto.Group_BoardDTO">
		select * from group_board order by written_date desc
 	</select> 	

 	<!-- 검색으로 일반게시판 글 정보 가져오기 -->
	<select id="generalSearchList" parameterType="map" resultType="com.kiri.dto.BoardDTO">
		<if test="category == 'board_all'">
			select * from board where board_category not like '%공지%' and
					(board_title like '%' || #{keyword} ||'%' or
					board_category like '%' || #{keyword} ||'%')
		</if>
		<if test="category == 'board_title'">
			select * from board where board_category not like '%공지%' and
					board_title like '%' || #{keyword} ||'%'
		</if>
		<if test="category == 'board_category'">
			select * from board where board_category not like '%공지%' and
					board_category like '%' || #{keyword} ||'%'
		</if>
	</select>
	
	<!-- 검색으로 일반게시판 공지 글 정보 가져오기 -->
	<select id="noticeSearchList" parameterType="map" resultType="com.kiri.dto.BoardDTO">
		<if test="category == 'board_all'">
			select * from board where board_category like '%공지%' and
					(board_title like '%' || #{keyword} ||'%' or
					board_category like '%' || #{keyword} ||'%')
		</if>
		<if test="category == 'board_title'">
			select * from board where board_category like '%공지%' and
					board_title like '%' || #{keyword} ||'%'
		</if>
		<if test="category == 'board_category'">
			select * from board where board_category like '%공지%' and
					board_category like '%' || #{keyword} ||'%'
		</if>
	</select>

	<!-- 검색으로 모임게시판 글 정보 가져오기 -->
	<select id="meetingSearchList" parameterType="map" resultType="com.kiri.dto.Group_BoardDTO">

		<if test="category == 'board_all'">
			select * from group_board where
					(gboard_title like '%' || #{keyword} ||'%' or
					gboard_category like '%' || #{keyword} ||'%')
		</if>
		<if test="category == 'gboard_title'">
			select * from group_board where
					gboard_title like '%' || #{keyword} ||'%'
		</if>
		<if test="category == 'gboard_category'">
			select * from group_board where
					gboard_category like '%' || #{keyword} ||'%'
		</if>
	</select>

	<!-- 일반 게시글 삭제 -->
	<delete id="boardDelete" parameterType="int">
		delete from board
			where seq_board=${seq_board}
	</delete>

	<!-- 모임 게시글 삭제 -->
	<delete id="groupBoardDelete" parameterType="int">
		delete from group_board
			where seq_group_board=${seq_group_board}
	</delete>

 	<!-- 페이지네이션 BoardCnt -->
 	<select id="getBoardPageNavi" resultType="int">
 		select count(*) as totalCnt from board
 	</select>

 	<!-- 김영완 07_22 -->
 	<!-- 카카오맵 -->
 	<select id="selectAllGroupLocation" resultType="com.kiri.dto.AdminMainDTO">
 		select * from group_calendar join (select seq_group, group_title from tbl_group) using(seq_group)
 	</select>

 	<!-- 도넛 그래프  -->
 	<select id="cntGroupCalendar" resultType="com.kiri.dto.AdminMainDTO">
 		select group_title, count(*) group_cal_cnt from group_calendar join (select seq_group, group_title from tbl_group) using(seq_group) group by group_title
 	</select>

 	<!-- 멤버 수 -->
 	<select id="cntMember" resultType="int">
       select sum(count(*)) cntMem from member group by user_email
    </select>

	<!-- 모임 수 -->
	<select id="cntGroupCnt" resultType="int">
		select nvl(sum(count(*)),0) cntGroup from tbl_group group by seq_group
	</select>

	<!-- 게시글 수(자유게시판) -->
	<select id="cntBoard" resultType="int">
		select nvl(sum(count(*)),0) cntBoard from board group by seq_board
	</select> 

	<!-- 게시글 수(모임게시판) -->
	<select id="cntGroupBoard" resultType="int">
		select nvl(sum(count(*)),0) cntGroupBoard from group_board group by seq_group_board
	</select>

	<!-- 일정수 -->
	<select id="cntGroupCal" resultType="int">
		select nvl(sum(count(*)),0) cntCal from group_calendar group by seq_group
	</select>

	<!-- 선호 지역수 -->
	<select id="cntPreLocation" resultType="com.kiri.dto.SiteDTO">
		select area,count(*) as preCnt from site group by area
	</select>

	<!-- 로그인 로그 수 -->
	<!-- 김예원 07_26-->
	<select id="cntLoginLog" resultType="com.kiri.dto.Login_LogDTO">
			select to_char(b.dt, 'YY-MM-DD') as login_time, nvl(sum(a.cnt),0) loginCnt
			from (SELECT TO_DATE(login_time, 'YY-MM-DD') AS login_time, count(user_email) cnt FROM login_log
		          WHERE (login_time >= TO_DATE(SYSDATE-7,'YY-MM-DD')) and login_status = '성공' GROUP BY login_time) a
		          ,(SELECT TO_DATE(sysdate-6,'YY-MM-DD') + LEVEL - 1 AS dt FROM dual
		         <![CDATA[CONNECT BY LEVEL < = (TO_DATE(sysdate,'YY-MM-DD') - TO_DATE(sysdate-7,'YY-MM-DD'))) b]]>
		    where b.dt = a.login_time(+)
		    group by b.dt
		    order by b.dt
	</select>
 </mapper>